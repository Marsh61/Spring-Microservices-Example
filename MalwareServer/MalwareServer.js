var fs = require("fs");
var http = require("http");
var url = require("url");
var mime = require("mime-types");
var path = require("path");
var qs = require('querystring');
var sql = require('sqlite3').verbose();


var server = http.createServer(handleRequest); 

const ROOT = "./public";


server.listen(3003);


function handleRequest (req, res) {
    console.log(req.method + " request for: " + req.url);
    var urlObj = url.parse(req.url);
    var fileName = ROOT+urlObj.pathname;

    fs.stat(fileName, handleStaticFile);


    function handleStaticFile(err, stats) {
        if (err) {
            respondErr(err);
        } else if (stats.isFile()){
            fs.readFile(fileName,function(err,data)
            {
                if (err) 
                {
                    respondErr(err);
                } else
                {
                    respond(200,data);
                }
            });
        }
    }


    function respondErr(err)
	{
		console.log("Handle Error: "+ err.message);
		respond(500,err.message);
	}

    function respond (code,data,cookie, location, type) {
        res.writeHead(code, {"preflightContinue" : false, "Access-Control-Max-Age": "3600", "Access-Control-Allow-Headers": "origin, content-type, accept, x-requested-with",'Access-Control-Allow-Methods': "GET, POST, PUT, DELETE, OPTIONS", 'Access-Control-Allow-Origin': '*', 'Set-Cookie': cookie || '','Location': location || "" , "content-type": "" || mime.lookup(urlObj.pathname) || "text/html"});
        res.end(data || "");
    }
}

